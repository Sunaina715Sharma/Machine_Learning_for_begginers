{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bc4f7506",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f2ba93c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pregnancies</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BloodPressure</th>\n",
       "      <th>SkinThickness</th>\n",
       "      <th>Insulin</th>\n",
       "      <th>BMI</th>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outcome</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6</td>\n",
       "      <td>148</td>\n",
       "      <td>72</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>33.6</td>\n",
       "      <td>0.627</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>85</td>\n",
       "      <td>66</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.351</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>183</td>\n",
       "      <td>64</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23.3</td>\n",
       "      <td>0.672</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
       "0            6      148             72             35        0  33.6   \n",
       "1            1       85             66             29        0  26.6   \n",
       "2            8      183             64              0        0  23.3   \n",
       "\n",
       "   DiabetesPedigreeFunction  Age  Outcome  \n",
       "0                     0.627   50        1  \n",
       "1                     0.351   31        0  \n",
       "2                     0.672   32        1  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df= pd.read_csv(\"https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv\")\n",
    "df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1f1a4f06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Pregnancies</th>\n",
       "      <td>768.0</td>\n",
       "      <td>3.845052</td>\n",
       "      <td>3.369578</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>3.0000</td>\n",
       "      <td>6.00000</td>\n",
       "      <td>17.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Glucose</th>\n",
       "      <td>768.0</td>\n",
       "      <td>120.894531</td>\n",
       "      <td>31.972618</td>\n",
       "      <td>0.000</td>\n",
       "      <td>99.00000</td>\n",
       "      <td>117.0000</td>\n",
       "      <td>140.25000</td>\n",
       "      <td>199.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BloodPressure</th>\n",
       "      <td>768.0</td>\n",
       "      <td>69.105469</td>\n",
       "      <td>19.355807</td>\n",
       "      <td>0.000</td>\n",
       "      <td>62.00000</td>\n",
       "      <td>72.0000</td>\n",
       "      <td>80.00000</td>\n",
       "      <td>122.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkinThickness</th>\n",
       "      <td>768.0</td>\n",
       "      <td>20.536458</td>\n",
       "      <td>15.952218</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>23.0000</td>\n",
       "      <td>32.00000</td>\n",
       "      <td>99.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Insulin</th>\n",
       "      <td>768.0</td>\n",
       "      <td>79.799479</td>\n",
       "      <td>115.244002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>30.5000</td>\n",
       "      <td>127.25000</td>\n",
       "      <td>846.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BMI</th>\n",
       "      <td>768.0</td>\n",
       "      <td>31.992578</td>\n",
       "      <td>7.884160</td>\n",
       "      <td>0.000</td>\n",
       "      <td>27.30000</td>\n",
       "      <td>32.0000</td>\n",
       "      <td>36.60000</td>\n",
       "      <td>67.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <td>768.0</td>\n",
       "      <td>0.471876</td>\n",
       "      <td>0.331329</td>\n",
       "      <td>0.078</td>\n",
       "      <td>0.24375</td>\n",
       "      <td>0.3725</td>\n",
       "      <td>0.62625</td>\n",
       "      <td>2.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>768.0</td>\n",
       "      <td>33.240885</td>\n",
       "      <td>11.760232</td>\n",
       "      <td>21.000</td>\n",
       "      <td>24.00000</td>\n",
       "      <td>29.0000</td>\n",
       "      <td>41.00000</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outcome</th>\n",
       "      <td>768.0</td>\n",
       "      <td>0.348958</td>\n",
       "      <td>0.476951</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          count        mean         std     min       25%  \\\n",
       "Pregnancies               768.0    3.845052    3.369578   0.000   1.00000   \n",
       "Glucose                   768.0  120.894531   31.972618   0.000  99.00000   \n",
       "BloodPressure             768.0   69.105469   19.355807   0.000  62.00000   \n",
       "SkinThickness             768.0   20.536458   15.952218   0.000   0.00000   \n",
       "Insulin                   768.0   79.799479  115.244002   0.000   0.00000   \n",
       "BMI                       768.0   31.992578    7.884160   0.000  27.30000   \n",
       "DiabetesPedigreeFunction  768.0    0.471876    0.331329   0.078   0.24375   \n",
       "Age                       768.0   33.240885   11.760232  21.000  24.00000   \n",
       "Outcome                   768.0    0.348958    0.476951   0.000   0.00000   \n",
       "\n",
       "                               50%        75%     max  \n",
       "Pregnancies                 3.0000    6.00000   17.00  \n",
       "Glucose                   117.0000  140.25000  199.00  \n",
       "BloodPressure              72.0000   80.00000  122.00  \n",
       "SkinThickness              23.0000   32.00000   99.00  \n",
       "Insulin                    30.5000  127.25000  846.00  \n",
       "BMI                        32.0000   36.60000   67.10  \n",
       "DiabetesPedigreeFunction    0.3725    0.62625    2.42  \n",
       "Age                        29.0000   41.00000   81.00  \n",
       "Outcome                     0.0000    1.00000    1.00  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3a30f462",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 768 entries, 0 to 767\n",
      "Data columns (total 9 columns):\n",
      " #   Column                    Non-Null Count  Dtype  \n",
      "---  ------                    --------------  -----  \n",
      " 0   Pregnancies               768 non-null    int64  \n",
      " 1   Glucose                   768 non-null    int64  \n",
      " 2   BloodPressure             768 non-null    int64  \n",
      " 3   SkinThickness             768 non-null    int64  \n",
      " 4   Insulin                   768 non-null    int64  \n",
      " 5   BMI                       768 non-null    float64\n",
      " 6   DiabetesPedigreeFunction  768 non-null    float64\n",
      " 7   Age                       768 non-null    int64  \n",
      " 8   Outcome                   768 non-null    int64  \n",
      "dtypes: float64(2), int64(7)\n",
      "memory usage: 54.1 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6375556c",
   "metadata": {},
   "source": [
    "##### Finding zero count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "481a3763",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(111, 5, 35, 227, 374, 11)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# counting zero values\n",
    "(df[\"Pregnancies\"]==0).sum(),(df[\"Glucose\"]==0).sum(),(df[\"BloodPressure\"]==0).sum(),(df[\"SkinThickness\"]==0).sum(),(df[\"Insulin\"]==0).sum(),(df[\"BMI\"]==0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2c069994",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "l = ['Glucose','BloodPressure','SkinThickness','Insulin','BMI']\n",
    "l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6b0c5bca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "median of  Glucose  is  117.0\n",
      "mean of  Glucose  is  120.89453125\n",
      "median of  BloodPressure  is  72.0\n",
      "mean of  BloodPressure  is  69.10546875\n",
      "median of  SkinThickness  is  23.0\n",
      "mean of  SkinThickness  is  20.536458333333332\n",
      "median of  Insulin  is  30.5\n",
      "mean of  Insulin  is  79.79947916666667\n",
      "median of  BMI  is  32.0\n",
      "mean of  BMI  is  31.992578124999977\n"
     ]
    }
   ],
   "source": [
    "for i in l:\n",
    "    print(\"median of \",i,\" is \",df[i].median())\n",
    "    print(\"mean of \",i,\" is \",df[i].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1e38c4fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in l:\n",
    "    df[i].replace({0:df[i].median()}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b381569e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(111, 0, 0, 0, 0, 0)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df[\"Pregnancies\"]==0).sum(),(df[\"Glucose\"]==0).sum(),(df[\"BloodPressure\"]==0).sum(),(df[\"SkinThickness\"]==0).sum(),(df[\"Insulin\"]==0).sum(),(df[\"BMI\"]==0).sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54563106",
   "metadata": {},
   "source": [
    "##### Finding Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "925c35a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(df);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1ab47a80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n",
       "       'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "241a3ff3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10,7))\n",
    "df.boxplot(l);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e6a6c9dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(df[\"Insulin\"]);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd277852",
   "metadata": {},
   "source": [
    "#### Removing Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a9521d9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def outlier_treatment():\n",
    "    l = [\"BMI\",\"Glucose\",\"SkinThickness\",\"Age\",\"BloodPressure\",\"Insulin\",\"Pregnancies\",\"DiabetesPedigreeFunction\"]\n",
    "    for i in l:\n",
    "        x = np.quantile(df[i],[0.25,0.75])\n",
    "        iqr = x[1]-x[0]\n",
    "        uw = x[1]+1.5*iqr\n",
    "        lw = x[0]-1.5*iqr\n",
    "        df[i]  = np.where(df[i]>uw,uw,(np.where(df[i]<lw,lw,df[i])))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4dbaf3e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "outlier_treatment()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "15e84e3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pn = 1\n",
    "plt.figure(figsize=(15,10))\n",
    "for i in l:\n",
    "    if pn<9:\n",
    "        plt.subplot(3,3,pn)\n",
    "        plt.boxplot(df[i])\n",
    "        plt.xlabel(i)\n",
    "        pn=pn + 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db2d44e6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5630d133",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 14.   ,  30.5  ,  30.5  ,  31.25 , 127.25 , 150.   , 210.   ,\n",
       "       272.375])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = np.quantile(df[\"Insulin\"],[0,0.10,0.25,0.50,0.75,0.80,0.90,0.99])\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f476e31d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "272.375"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iqr = x[4]-x[2]\n",
    "iqr\n",
    "uw = x[4]+1.5*iqr\n",
    "uw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f63f2db5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-114.625"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lw = x[2]-1.5*iqr\n",
    "lw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a822f3a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       30.5\n",
       "1       30.5\n",
       "2       30.5\n",
       "3       94.0\n",
       "4      168.0\n",
       "       ...  \n",
       "763    180.0\n",
       "764     30.5\n",
       "765    112.0\n",
       "766     30.5\n",
       "767     30.5\n",
       "Name: Insulin, Length: 768, dtype: float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Insulin\"] = np.where(df[\"Insulin\"]>uw,uw,df[\"Insulin\"])\n",
    "df[\"Insulin\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c1f5a36c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       30.5\n",
       "1       30.5\n",
       "2       30.5\n",
       "3       94.0\n",
       "4      168.0\n",
       "       ...  \n",
       "763    180.0\n",
       "764     30.5\n",
       "765    112.0\n",
       "766     30.5\n",
       "767     30.5\n",
       "Name: Insulin, Length: 768, dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Insulin\"] = np.where(df[\"Insulin\"]<lw,lw,df[\"Insulin\"])\n",
    "df[\"Insulin\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "30f8aea1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pregnancies</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BloodPressure</th>\n",
       "      <th>SkinThickness</th>\n",
       "      <th>Insulin</th>\n",
       "      <th>BMI</th>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outcome</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Pregnancies</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.126856</td>\n",
       "      <td>0.210906</td>\n",
       "      <td>0.047563</td>\n",
       "      <td>-0.061192</td>\n",
       "      <td>0.027145</td>\n",
       "      <td>-0.017398</td>\n",
       "      <td>0.549695</td>\n",
       "      <td>0.220392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Glucose</th>\n",
       "      <td>0.126856</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.220199</td>\n",
       "      <td>0.162030</td>\n",
       "      <td>0.338429</td>\n",
       "      <td>0.233953</td>\n",
       "      <td>0.118457</td>\n",
       "      <td>0.268912</td>\n",
       "      <td>0.492782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BloodPressure</th>\n",
       "      <td>0.210906</td>\n",
       "      <td>0.220199</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.159782</td>\n",
       "      <td>-0.033847</td>\n",
       "      <td>0.286410</td>\n",
       "      <td>0.012305</td>\n",
       "      <td>0.332898</td>\n",
       "      <td>0.168971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkinThickness</th>\n",
       "      <td>0.047563</td>\n",
       "      <td>0.162030</td>\n",
       "      <td>0.159782</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.285411</td>\n",
       "      <td>0.562499</td>\n",
       "      <td>0.118426</td>\n",
       "      <td>0.045434</td>\n",
       "      <td>0.191333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Insulin</th>\n",
       "      <td>-0.061192</td>\n",
       "      <td>0.338429</td>\n",
       "      <td>-0.033847</td>\n",
       "      <td>0.285411</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.207474</td>\n",
       "      <td>0.191870</td>\n",
       "      <td>-0.040448</td>\n",
       "      <td>0.147295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BMI</th>\n",
       "      <td>0.027145</td>\n",
       "      <td>0.233953</td>\n",
       "      <td>0.286410</td>\n",
       "      <td>0.562499</td>\n",
       "      <td>0.207474</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.138541</td>\n",
       "      <td>0.035861</td>\n",
       "      <td>0.313030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <td>-0.017398</td>\n",
       "      <td>0.118457</td>\n",
       "      <td>0.012305</td>\n",
       "      <td>0.118426</td>\n",
       "      <td>0.191870</td>\n",
       "      <td>0.138541</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.047289</td>\n",
       "      <td>0.184969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>0.549695</td>\n",
       "      <td>0.268912</td>\n",
       "      <td>0.332898</td>\n",
       "      <td>0.045434</td>\n",
       "      <td>-0.040448</td>\n",
       "      <td>0.035861</td>\n",
       "      <td>0.047289</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.242702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outcome</th>\n",
       "      <td>0.220392</td>\n",
       "      <td>0.492782</td>\n",
       "      <td>0.168971</td>\n",
       "      <td>0.191333</td>\n",
       "      <td>0.147295</td>\n",
       "      <td>0.313030</td>\n",
       "      <td>0.184969</td>\n",
       "      <td>0.242702</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Pregnancies   Glucose  BloodPressure  SkinThickness  \\\n",
       "Pregnancies                  1.000000  0.126856       0.210906       0.047563   \n",
       "Glucose                      0.126856  1.000000       0.220199       0.162030   \n",
       "BloodPressure                0.210906  0.220199       1.000000       0.159782   \n",
       "SkinThickness                0.047563  0.162030       0.159782       1.000000   \n",
       "Insulin                     -0.061192  0.338429      -0.033847       0.285411   \n",
       "BMI                          0.027145  0.233953       0.286410       0.562499   \n",
       "DiabetesPedigreeFunction    -0.017398  0.118457       0.012305       0.118426   \n",
       "Age                          0.549695  0.268912       0.332898       0.045434   \n",
       "Outcome                      0.220392  0.492782       0.168971       0.191333   \n",
       "\n",
       "                           Insulin       BMI  DiabetesPedigreeFunction  \\\n",
       "Pregnancies              -0.061192  0.027145                 -0.017398   \n",
       "Glucose                   0.338429  0.233953                  0.118457   \n",
       "BloodPressure            -0.033847  0.286410                  0.012305   \n",
       "SkinThickness             0.285411  0.562499                  0.118426   \n",
       "Insulin                   1.000000  0.207474                  0.191870   \n",
       "BMI                       0.207474  1.000000                  0.138541   \n",
       "DiabetesPedigreeFunction  0.191870  0.138541                  1.000000   \n",
       "Age                      -0.040448  0.035861                  0.047289   \n",
       "Outcome                   0.147295  0.313030                  0.184969   \n",
       "\n",
       "                               Age   Outcome  \n",
       "Pregnancies               0.549695  0.220392  \n",
       "Glucose                   0.268912  0.492782  \n",
       "BloodPressure             0.332898  0.168971  \n",
       "SkinThickness             0.045434  0.191333  \n",
       "Insulin                  -0.040448  0.147295  \n",
       "BMI                       0.035861  0.313030  \n",
       "DiabetesPedigreeFunction  0.047289  0.184969  \n",
       "Age                       1.000000  0.242702  \n",
       "Outcome                   0.242702  1.000000  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ca172c05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pregnancies</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BloodPressure</th>\n",
       "      <th>SkinThickness</th>\n",
       "      <th>Insulin</th>\n",
       "      <th>BMI</th>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outcome</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Pregnancies</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.126856</td>\n",
       "      <td>0.210906</td>\n",
       "      <td>0.047563</td>\n",
       "      <td>-0.061192</td>\n",
       "      <td>0.027145</td>\n",
       "      <td>-0.017398</td>\n",
       "      <td>0.549695</td>\n",
       "      <td>0.220392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Glucose</th>\n",
       "      <td>0.126856</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.220199</td>\n",
       "      <td>0.162030</td>\n",
       "      <td>0.338429</td>\n",
       "      <td>0.233953</td>\n",
       "      <td>0.118457</td>\n",
       "      <td>0.268912</td>\n",
       "      <td>0.492782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BloodPressure</th>\n",
       "      <td>0.210906</td>\n",
       "      <td>0.220199</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.159782</td>\n",
       "      <td>-0.033847</td>\n",
       "      <td>0.286410</td>\n",
       "      <td>0.012305</td>\n",
       "      <td>0.332898</td>\n",
       "      <td>0.168971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkinThickness</th>\n",
       "      <td>0.047563</td>\n",
       "      <td>0.162030</td>\n",
       "      <td>0.159782</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.285411</td>\n",
       "      <td>0.562499</td>\n",
       "      <td>0.118426</td>\n",
       "      <td>0.045434</td>\n",
       "      <td>0.191333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Insulin</th>\n",
       "      <td>-0.061192</td>\n",
       "      <td>0.338429</td>\n",
       "      <td>-0.033847</td>\n",
       "      <td>0.285411</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.207474</td>\n",
       "      <td>0.191870</td>\n",
       "      <td>-0.040448</td>\n",
       "      <td>0.147295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BMI</th>\n",
       "      <td>0.027145</td>\n",
       "      <td>0.233953</td>\n",
       "      <td>0.286410</td>\n",
       "      <td>0.562499</td>\n",
       "      <td>0.207474</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.138541</td>\n",
       "      <td>0.035861</td>\n",
       "      <td>0.313030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <td>-0.017398</td>\n",
       "      <td>0.118457</td>\n",
       "      <td>0.012305</td>\n",
       "      <td>0.118426</td>\n",
       "      <td>0.191870</td>\n",
       "      <td>0.138541</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.047289</td>\n",
       "      <td>0.184969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>0.549695</td>\n",
       "      <td>0.268912</td>\n",
       "      <td>0.332898</td>\n",
       "      <td>0.045434</td>\n",
       "      <td>-0.040448</td>\n",
       "      <td>0.035861</td>\n",
       "      <td>0.047289</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.242702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outcome</th>\n",
       "      <td>0.220392</td>\n",
       "      <td>0.492782</td>\n",
       "      <td>0.168971</td>\n",
       "      <td>0.191333</td>\n",
       "      <td>0.147295</td>\n",
       "      <td>0.313030</td>\n",
       "      <td>0.184969</td>\n",
       "      <td>0.242702</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Pregnancies   Glucose  BloodPressure  SkinThickness  \\\n",
       "Pregnancies                  1.000000  0.126856       0.210906       0.047563   \n",
       "Glucose                      0.126856  1.000000       0.220199       0.162030   \n",
       "BloodPressure                0.210906  0.220199       1.000000       0.159782   \n",
       "SkinThickness                0.047563  0.162030       0.159782       1.000000   \n",
       "Insulin                     -0.061192  0.338429      -0.033847       0.285411   \n",
       "BMI                          0.027145  0.233953       0.286410       0.562499   \n",
       "DiabetesPedigreeFunction    -0.017398  0.118457       0.012305       0.118426   \n",
       "Age                          0.549695  0.268912       0.332898       0.045434   \n",
       "Outcome                      0.220392  0.492782       0.168971       0.191333   \n",
       "\n",
       "                           Insulin       BMI  DiabetesPedigreeFunction  \\\n",
       "Pregnancies              -0.061192  0.027145                 -0.017398   \n",
       "Glucose                   0.338429  0.233953                  0.118457   \n",
       "BloodPressure            -0.033847  0.286410                  0.012305   \n",
       "SkinThickness             0.285411  0.562499                  0.118426   \n",
       "Insulin                   1.000000  0.207474                  0.191870   \n",
       "BMI                       0.207474  1.000000                  0.138541   \n",
       "DiabetesPedigreeFunction  0.191870  0.138541                  1.000000   \n",
       "Age                      -0.040448  0.035861                  0.047289   \n",
       "Outcome                   0.147295  0.313030                  0.184969   \n",
       "\n",
       "                               Age   Outcome  \n",
       "Pregnancies               0.549695  0.220392  \n",
       "Glucose                   0.268912  0.492782  \n",
       "BloodPressure             0.332898  0.168971  \n",
       "SkinThickness             0.045434  0.191333  \n",
       "Insulin                  -0.040448  0.147295  \n",
       "BMI                       0.035861  0.313030  \n",
       "DiabetesPedigreeFunction  0.047289  0.184969  \n",
       "Age                       1.000000  0.242702  \n",
       "Outcome                   0.242702  1.000000  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "096371ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df.corr(), annot = True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "49643fba",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df[\"Outcome\"]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "928fb850",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n",
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# glucose vs outcomes\n",
    "\n",
    "plt.figure(figsize=(20, 6))\n",
    "\n",
    "plt.subplot(1,2,1)\n",
    "sns.distplot(df[\"Insulin\"])\n",
    "\n",
    "plt.title(\"Histogram of Insulin and Outcomes\")\n",
    "plt.subplot(1,2,2)\n",
    "\n",
    "sns.boxplot(df[\"Outcome\"],df[\"Insulin\"])\n",
    "plt.title(\"boxplot of Insulin and Outcomes\");"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3eda2fc7",
   "metadata": {},
   "source": [
    "#### applying Logistics Regression on Binary dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "578c3d4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "56fbff04",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop(columns = [\"Outcome\"])\n",
    "Y = df[\"Outcome\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b0692a0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.02, random_state = 123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5bf64561",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pregnancies</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BloodPressure</th>\n",
       "      <th>SkinThickness</th>\n",
       "      <th>Insulin</th>\n",
       "      <th>BMI</th>\n",
       "      <th>DiabetesPedigreeFunction</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>7.0</td>\n",
       "      <td>181.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>192.000</td>\n",
       "      <td>35.9</td>\n",
       "      <td>0.586</td>\n",
       "      <td>51.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>2.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>272.375</td>\n",
       "      <td>27.7</td>\n",
       "      <td>1.200</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>11.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>33.2</td>\n",
       "      <td>0.420</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>2.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>27.7</td>\n",
       "      <td>0.290</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>483</th>\n",
       "      <td>0.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>125.000</td>\n",
       "      <td>38.2</td>\n",
       "      <td>0.233</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>743</th>\n",
       "      <td>9.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>32.7</td>\n",
       "      <td>0.734</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>408</th>\n",
       "      <td>8.0</td>\n",
       "      <td>197.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>25.9</td>\n",
       "      <td>1.191</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>8.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.183</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>7.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>30.4</td>\n",
       "      <td>0.165</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>4.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>29.6</td>\n",
       "      <td>0.709</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>715</th>\n",
       "      <td>7.0</td>\n",
       "      <td>187.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>272.375</td>\n",
       "      <td>33.9</td>\n",
       "      <td>0.826</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>2.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>28.9</td>\n",
       "      <td>0.773</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>1.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>27.2</td>\n",
       "      <td>1.095</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>4.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>176.000</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0.443</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>675</th>\n",
       "      <td>6.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>30.9</td>\n",
       "      <td>0.328</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>367</th>\n",
       "      <td>0.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>30.500</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.252</td>\n",
       "      <td>21.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
       "236          7.0    181.0           84.0           21.0  192.000  35.9   \n",
       "395          2.0    127.0           58.0           24.0  272.375  27.7   \n",
       "36          11.0    138.0           76.0           23.0   30.500  33.2   \n",
       "210          2.0     81.0           60.0           22.0   30.500  27.7   \n",
       "483          0.0     84.0           82.0           31.0  125.000  38.2   \n",
       "743          9.0    140.0           94.0           23.0   30.500  32.7   \n",
       "408          8.0    197.0           74.0           23.0   30.500  25.9   \n",
       "468          8.0    120.0           72.0           23.0   30.500  30.0   \n",
       "283          7.0    161.0           86.0           23.0   30.500  30.4   \n",
       "167          4.0    120.0           68.0           23.0   30.500  29.6   \n",
       "715          7.0    187.0           50.0           33.0  272.375  33.9   \n",
       "172          2.0     87.0           72.0           23.0   30.500  28.9   \n",
       "416          1.0     97.0           68.0           21.0   30.500  27.2   \n",
       "91           4.0    123.0           80.0           15.0  176.000  32.0   \n",
       "675          6.0    195.0           70.0           23.0   30.500  30.9   \n",
       "367          0.0    101.0           64.0           17.0   30.500  21.0   \n",
       "\n",
       "     DiabetesPedigreeFunction   Age  \n",
       "236                     0.586  51.0  \n",
       "395                     1.200  25.0  \n",
       "36                      0.420  35.0  \n",
       "210                     0.290  25.0  \n",
       "483                     0.233  23.0  \n",
       "743                     0.734  45.0  \n",
       "408                     1.191  39.0  \n",
       "468                     0.183  38.0  \n",
       "283                     0.165  47.0  \n",
       "167                     0.709  34.0  \n",
       "715                     0.826  34.0  \n",
       "172                     0.773  25.0  \n",
       "416                     1.095  22.0  \n",
       "91                      0.443  34.0  \n",
       "675                     0.328  31.0  \n",
       "367                     0.252  21.0  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "2aaa5f46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16,)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5b37b187",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "130f4602",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\admin\\anaconda3\\lib\\site-packages\\sklearn\\linear_model\\_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg = LogisticRegression()\n",
    "logreg.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "47c79663",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16,)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ypred = logreg.predict(X_test)\n",
    "ypred.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "59dcbecb",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6f208ae5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[7, 2],\n",
       "       [2, 5]], dtype=int64)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(Y_test,ypred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "059c3b07",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report,accuracy_score,f1_score,roc_auc_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "79060830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.75"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(Y_test,ypred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "eb8cd0b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7142857142857143"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f1_score(Y_test,ypred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "4759d593",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.78      0.78      0.78         9\n",
      "           1       0.71      0.71      0.71         7\n",
      "\n",
      "    accuracy                           0.75        16\n",
      "   macro avg       0.75      0.75      0.75        16\n",
      "weighted avg       0.75      0.75      0.75        16\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cls = classification_report(Y_test,ypred)\n",
    "print(cls)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "269fe1a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.         0.22222222 1.        ]\n",
      "[0.         0.71428571 1.        ]\n",
      "[2 1 0]\n"
     ]
    }
   ],
   "source": [
    "fpr,tpr,threshold = roc_curve(Y_test,ypred)\n",
    "print(fpr)\n",
    "print(tpr)\n",
    "print(threshold)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "6f910321",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.746031746031746"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# plotting auc curve between fpr and tpr\n",
    "\n",
    "roc_auc_score(Y_test,ypred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "64746d26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1ea9c5c8310>"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(fpr,tpr,marker = \"o\")\n",
    "plt.plot([0,0.2,0.4,0.6,0.8,1.0],[0,0.2,0.4,0.6,0.8,1.0], \"--\")\n",
    "plt.legend([0.18,0.5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "256dcf92",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d42897b9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48902282",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
